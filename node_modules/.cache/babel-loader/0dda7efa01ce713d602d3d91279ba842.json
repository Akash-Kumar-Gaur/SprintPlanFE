{"ast":null,"code":"var _jsxFileName = \"/Users/akashkumargaur/sprintPlan/frontend/src/Scenes/PollScene/partials/PollResults/index.jsx\",\n    _s = $RefreshSig$();\n\nimport firebase from \"firebase\";\nimport React, { useEffect, useState } from \"react\";\nimport roomImg from \"../../../../Assets/Images/room.png\";\nimport userImg from \"../../../../Assets/Images/user.png\";\nimport styles from \"../../index.module.scss\";\nimport { useParams } from \"react-router\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PollResults() {\n  _s();\n\n  const [pollData, setPollData] = useState({});\n  const [selectedPoll, setSelectedPoll] = useState(\"\");\n  const {\n    pollId\n  } = useParams();\n\n  function setHasVoted(pollValue) {\n    const currentUserId = window.localStorage.getItem(\"loggedId\");\n    const userRef = firebase.database().ref(pollId).child(currentUserId);\n    userRef.update({\n      voted: !selectedPoll.length,\n      voteValue: pollValue === selectedPoll ? \"\" : pollValue\n    });\n  }\n\n  useEffect(() => {\n    fetchCurrentPollData();\n  }, []);\n\n  function fetchCurrentPollData() {\n    axios.get(`/poll/${pollId}`).then(res => {\n      const response = res.data;\n      setPollData(response);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.resultsWrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cardHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.pollName,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: roomImg,\n          alt: \"RoomName\",\n          className: styles.roomImg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), pollData.roomName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.logged,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: userImg,\n          alt: \"User\",\n          className: styles.userImg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), window.localStorage.getItem(\"loggedUser\") || \"User\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.seriesWrapper}`,\n      children: pollData.series && pollData.series.length && pollData.series.map((entry, key) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.entryCard} ${selectedPoll === entry.entryValue ? styles.selectedPoll : \"\"}`,\n          onClick: () => {\n            setSelectedPoll(entry.entryValue === selectedPoll ? \"\" : entry.entryValue);\n            setHasVoted(entry.entryValue);\n          },\n          children: entry.entryValue\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PollResults, \"j+hahHL5o6nAbEyYdbwVpciT3D4=\", false, function () {\n  return [useParams];\n});\n\n_c = PollResults;\nexport default PollResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollResults\");","map":{"version":3,"sources":["/Users/akashkumargaur/sprintPlan/frontend/src/Scenes/PollScene/partials/PollResults/index.jsx"],"names":["firebase","React","useEffect","useState","roomImg","userImg","styles","useParams","axios","PollResults","pollData","setPollData","selectedPoll","setSelectedPoll","pollId","setHasVoted","pollValue","currentUserId","window","localStorage","getItem","userRef","database","ref","child","update","voted","length","voteValue","fetchCurrentPollData","get","then","res","response","data","resultsWrapper","cardHeader","pollName","roomName","logged","seriesWrapper","series","map","entry","key","entryCard","entryValue"],"mappings":"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","sourcesContent":["import firebase from \"firebase\";\nimport React, { useEffect, useState } from \"react\";\nimport roomImg from \"../../../../Assets/Images/room.png\";\nimport userImg from \"../../../../Assets/Images/user.png\";\nimport styles from \"../../index.module.scss\";\nimport { useParams } from \"react-router\";\nimport axios from \"axios\";\n\nfunction PollResults() {\n  const [pollData, setPollData] = useState({});\n  const [selectedPoll, setSelectedPoll] = useState(\"\");\n  const { pollId } = useParams();\n\n  function setHasVoted(pollValue) {\n    const currentUserId = window.localStorage.getItem(\"loggedId\");\n    const userRef = firebase.database().ref(pollId).child(currentUserId);\n    userRef.update({\n      voted: !selectedPoll.length,\n      voteValue: pollValue === selectedPoll ? \"\" : pollValue,\n    });\n  }\n\n  useEffect(() => {\n    fetchCurrentPollData();\n  }, []);\n\n  function fetchCurrentPollData() {\n    axios.get(`/poll/${pollId}`).then((res) => {\n      const response = res.data;\n      setPollData(response);\n    });\n  }\n\n  return (\n    <div className={styles.resultsWrapper}>\n      <div className={styles.cardHeader}>\n        <div className={styles.pollName}>\n          <img src={roomImg} alt=\"RoomName\" className={styles.roomImg} />\n          {pollData.roomName}\n        </div>\n        <div className={styles.logged}>\n          <img src={userImg} alt=\"User\" className={styles.userImg} />\n          {window.localStorage.getItem(\"loggedUser\") || \"User\"}\n        </div>\n      </div>\n      <div className={`${styles.seriesWrapper}`}>\n        {pollData.series &&\n          pollData.series.length &&\n          pollData.series.map((entry, key) => {\n            return (\n              <div\n                key={key}\n                className={`${styles.entryCard} ${\n                  selectedPoll === entry.entryValue ? styles.selectedPoll : \"\"\n                }`}\n                onClick={() => {\n                  setSelectedPoll(\n                    entry.entryValue === selectedPoll ? \"\" : entry.entryValue\n                  );\n                  setHasVoted(entry.entryValue);\n                }}\n              >\n                {entry.entryValue}\n              </div>\n            );\n          })}\n        {/* <button onClick={() => console.log(\"pollData\", pollData)}>check</button> */}\n      </div>\n    </div>\n  );\n}\n\nexport default PollResults;\n"]},"metadata":{},"sourceType":"module"}