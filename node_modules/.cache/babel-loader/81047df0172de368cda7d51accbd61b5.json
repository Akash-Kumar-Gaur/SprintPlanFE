{"ast":null,"code":"var _jsxFileName = \"/Users/akashkumargaur/sprintPlan/frontend/src/Scenes/PollScene/partials/PollResults/index.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport roomImg from \"../../../../Assets/Images/room.png\";\nimport userImg from \"../../../../Assets/Images/user.png\";\nimport styles from \"../../index.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PollResults() {\n  const pollData = {\n    _id: \"ad41e2bd-5615-4d06-b797-0ab11ee4dbdc\",\n    roomName: \"TestGame\",\n    allCanSee: false,\n    series: [{\n      entryValue: \"0\",\n      count: 0\n    }, {\n      entryValue: \"1\",\n      count: 0\n    }, {\n      entryValue: \"2\",\n      count: 0\n    }, {\n      entryValue: \"3\",\n      count: 0\n    }, {\n      entryValue: \"5\",\n      count: 0\n    }, {\n      entryValue: \"8\",\n      count: 0\n    }, {\n      entryValue: \"13\",\n      count: 0\n    }, {\n      entryValue: \"21\",\n      count: 0\n    }],\n    isSpectator: null\n  }; //   const [pollData, setPollData] = useState(data);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.resultsWrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cardHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.pollName,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: roomImg,\n          alt: \"RoomName\",\n          className: styles.roomImg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), pollData.roomName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.logged,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: userImg,\n          alt: \"User\",\n          className: styles.userImg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), window.localStorage.getItem(\"loggedUser\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.seriesWrapper}`,\n      children: [pollData.series && pollData.series.length && pollData.series.map((entry, key) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.entryCard}`,\n          children: entry.entryValue\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => console.log(\"pollData\", pollData),\n        children: \"check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_c = PollResults;\nexport default PollResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollResults\");","map":{"version":3,"sources":["/Users/akashkumargaur/sprintPlan/frontend/src/Scenes/PollScene/partials/PollResults/index.jsx"],"names":["React","useEffect","useState","roomImg","userImg","styles","PollResults","pollData","_id","roomName","allCanSee","series","entryValue","count","isSpectator","resultsWrapper","cardHeader","pollName","logged","window","localStorage","getItem","seriesWrapper","length","map","entry","key","entryCard","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport roomImg from \"../../../../Assets/Images/room.png\";\nimport userImg from \"../../../../Assets/Images/user.png\";\nimport styles from \"../../index.module.scss\";\n\nfunction PollResults() {\n  const pollData = {\n    _id: \"ad41e2bd-5615-4d06-b797-0ab11ee4dbdc\",\n    roomName: \"TestGame\",\n    allCanSee: false,\n    series: [\n      { entryValue: \"0\", count: 0 },\n      { entryValue: \"1\", count: 0 },\n      { entryValue: \"2\", count: 0 },\n      { entryValue: \"3\", count: 0 },\n      { entryValue: \"5\", count: 0 },\n      { entryValue: \"8\", count: 0 },\n      { entryValue: \"13\", count: 0 },\n      { entryValue: \"21\", count: 0 },\n    ],\n    isSpectator: null,\n  };\n  //   const [pollData, setPollData] = useState(data);\n\n  return (\n    <div className={styles.resultsWrapper}>\n      <div className={styles.cardHeader}>\n        <div className={styles.pollName}>\n          <img src={roomImg} alt=\"RoomName\" className={styles.roomImg} />\n          {pollData.roomName}\n        </div>\n        <div className={styles.logged}>\n          <img src={userImg} alt=\"User\" className={styles.userImg} />\n          {window.localStorage.getItem(\"loggedUser\")}\n        </div>\n      </div>\n      <div className={`${styles.seriesWrapper}`}>\n        {pollData.series &&\n          pollData.series.length &&\n          pollData.series.map((entry, key) => {\n            return (\n              <div key={key} className={`${styles.entryCard}`}>\n                {entry.entryValue}\n              </div>\n            );\n          })}\n        <button onClick={() => console.log(\"pollData\", pollData)}>check</button>\n      </div>\n    </div>\n  );\n}\n\nexport default PollResults;\n"]},"metadata":{},"sourceType":"module"}