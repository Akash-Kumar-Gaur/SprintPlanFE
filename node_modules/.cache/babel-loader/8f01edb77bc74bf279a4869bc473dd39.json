{"ast":null,"code":"var _jsxFileName = \"/Users/akashkumargaur/sprintPlan/frontend/src/Scenes/PollScene/partials/NameInput/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useParams } from \"react-router\";\nimport { enterUser } from \"../../../../utils/database.utils\";\nimport firebase from \"firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NameInput({\n  close\n}) {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  let {\n    pollId\n  } = useParams();\n\n  const addUser = () => {\n    const dbRef = firebase.database().ref();\n    dbRef.child(\"polls\").child(pollId).get().then(snapshot => {\n      if (snapshot.exists()) {\n        console.log(snapshot.val());\n        const users = snapshot.val();\n\n        for (let id in users) {\n          if (users[id].name === window.localStorage.getItem(\"loggedUser\")) {\n            enterUser(`${name}1`, pollId);\n          }\n        }\n      } else {\n        console.log(\"No data available\");\n        enterUser(name, pollId);\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const pushUser = () => {\n    const userRef = firebase.database().ref(pollId);\n    userRef.on(\"value\", snapshot => {\n      const users = snapshot.val();\n      const tempUsers = [];\n\n      for (let id in users) {\n        if (users[id].name === name) {\n          setName(`${name}1`);\n        }\n\n        tempUsers.push({\n          id,\n          ...users[id]\n        }); // setLoggedUsers(tempUsers);\n        // if (users[id].name === window.localStorage.getItem(\"loggedUser\")) {\n        //   window.localStorage.setItem(\"loggedId\", id);\n        //   loggedId = id;\n        // }\n\n        console.log(\"tempUsersNI\", tempUsers);\n      }\n    });\n    addUser();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Please enter your name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-basic\",\n      variant: \"outlined\",\n      onChange: e => setName(e.target.value),\n      fullWidth: true,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: !name.length,\n      onClick: () => {\n        if (name.length) {\n          window.localStorage.setItem(\"loggedUser\", name);\n          pushUser();\n          close();\n        }\n      },\n      style: {\n        marginTop: \"30px\"\n      },\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NameInput, \"Wa9w+lzZnJa79l6IvpgEoM+m5SE=\", false, function () {\n  return [useParams];\n});\n\n_c = NameInput;\nexport default NameInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"NameInput\");","map":{"version":3,"sources":["/Users/akashkumargaur/sprintPlan/frontend/src/Scenes/PollScene/partials/NameInput/index.jsx"],"names":["React","useState","TextField","Button","useParams","enterUser","firebase","NameInput","close","name","setName","pollId","addUser","dbRef","database","ref","child","get","then","snapshot","exists","console","log","val","users","id","window","localStorage","getItem","catch","error","pushUser","userRef","on","tempUsers","push","textAlign","padding","e","target","value","length","setItem","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useParams } from \"react-router\";\nimport { enterUser } from \"../../../../utils/database.utils\";\nimport firebase from \"firebase\";\n\nfunction NameInput({ close }) {\n  const [name, setName] = useState(\"\");\n  let { pollId } = useParams();\n\n  const addUser = () => {\n    const dbRef = firebase.database().ref();\n    dbRef\n      .child(\"polls\")\n      .child(pollId)\n      .get()\n      .then((snapshot) => {\n        if (snapshot.exists()) {\n          console.log(snapshot.val());\n          const users = snapshot.val();\n          for (let id in users) {\n            if (users[id].name === window.localStorage.getItem(\"loggedUser\")) {\n              enterUser(`${name}1`, pollId);\n            }\n          }\n        } else {\n          console.log(\"No data available\");\n          enterUser(name, pollId);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const pushUser = () => {\n    const userRef = firebase.database().ref(pollId);\n    userRef.on(\"value\", (snapshot) => {\n      const users = snapshot.val();\n      const tempUsers = [];\n      for (let id in users) {\n        if (users[id].name === name) {\n          setName(`${name}1`);\n        }\n        tempUsers.push({ id, ...users[id] });\n        // setLoggedUsers(tempUsers);\n        // if (users[id].name === window.localStorage.getItem(\"loggedUser\")) {\n        //   window.localStorage.setItem(\"loggedId\", id);\n        //   loggedId = id;\n        // }\n        console.log(\"tempUsersNI\", tempUsers);\n      }\n    });\n    addUser();\n  };\n\n  return (\n    <div\n      style={{\n        textAlign: \"center\",\n        padding: \"20px\",\n      }}\n    >\n      <h3>Please enter your name</h3>\n      <TextField\n        id=\"outlined-basic\"\n        variant=\"outlined\"\n        onChange={(e) => setName(e.target.value)}\n        fullWidth\n        required\n      />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        disabled={!name.length}\n        onClick={() => {\n          if (name.length) {\n            window.localStorage.setItem(\"loggedUser\", name);\n            pushUser();\n            close();\n          }\n        }}\n        style={{\n          marginTop: \"30px\",\n        }}\n      >\n        Start Game\n      </Button>\n    </div>\n  );\n}\n\nexport default NameInput;\n"]},"metadata":{},"sourceType":"module"}