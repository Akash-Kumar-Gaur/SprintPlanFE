{"ast":null,"code":"var _jsxFileName = \"/Users/akashkumargaur/sprintPlan/frontend/src/Scenes/PollScene/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Popup from \"reactjs-popup\";\nimport NameInput from \"./partials/NameInput\";\nimport firebase from \"firebase\";\nimport styles from \"./index.module.scss\";\nimport PollResults from \"./partials/PollResults\";\nimport UsersList from \"./partials/UsersList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PollScene({\n  loggedUser\n}) {\n  _s();\n\n  let {\n    pollId\n  } = useParams();\n  const [loggedUsers, setLoggedUsers] = useState([]);\n  console.log(\"loggedUser\", loggedUser);\n  useEffect(() => {\n    getLoggedUsers();\n  }, []);\n\n  const getLoggedUsers = () => {\n    const userRef = firebase.database().ref(pollId);\n    const tempUsers = [];\n    userRef.on(\"value\", snapshot => {\n      const users = snapshot.val();\n\n      for (let id in users) {\n        tempUsers.push({\n          id,\n          ...users[id]\n        });\n      }\n\n      setLoggedUsers(tempUsers);\n    }).then(console.log(\"tempUsers\", tempUsers));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.pollScene,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.brandName,\n      children: \"SprintPlan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup // open={!loggedUsers.length}\n    , {\n      modals: true,\n      defaultOpen: !window.localStorage.getItem(\"loggedUser\"),\n      closeOnDocumentClick: false,\n      className: \"my-popup-content\",\n      contentStyle: {\n        width: \"400px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: close => /*#__PURE__*/_jsxDEV(NameInput, {\n        close: close\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.pollResults,\n      children: /*#__PURE__*/_jsxDEV(PollResults, {\n        loggedUsers: loggedUsers,\n        loggedUser: loggedUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.usersWrapper,\n      children: loggedUsers && loggedUsers.length ? /*#__PURE__*/_jsxDEV(UsersList, {\n        users: loggedUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Waiting for others to join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PollScene, \"6N3kzwMVK5zSQ3CY6jl1LxjeYb8=\", false, function () {\n  return [useParams];\n});\n\n_c = PollScene;\nexport default PollScene;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollScene\");","map":{"version":3,"sources":["/Users/akashkumargaur/sprintPlan/frontend/src/Scenes/PollScene/index.jsx"],"names":["React","useEffect","useState","useParams","Popup","NameInput","firebase","styles","PollResults","UsersList","PollScene","loggedUser","pollId","loggedUsers","setLoggedUsers","console","log","getLoggedUsers","userRef","database","ref","tempUsers","on","snapshot","users","val","id","push","then","pollScene","brandName","window","localStorage","getItem","width","display","flexDirection","alignItems","justifyContent","close","pollResults","usersWrapper","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Popup from \"reactjs-popup\";\nimport NameInput from \"./partials/NameInput\";\nimport firebase from \"firebase\";\nimport styles from \"./index.module.scss\";\nimport PollResults from \"./partials/PollResults\";\nimport UsersList from \"./partials/UsersList\";\n\nfunction PollScene({ loggedUser }) {\n  let { pollId } = useParams();\n  const [loggedUsers, setLoggedUsers] = useState([]);\n  console.log(\"loggedUser\", loggedUser);\n\n  useEffect(() => {\n    getLoggedUsers();\n  }, []);\n\n  const getLoggedUsers = () => {\n    const userRef = firebase.database().ref(pollId);\n    const tempUsers = [];\n    userRef\n      .on(\"value\", (snapshot) => {\n        const users = snapshot.val();\n        for (let id in users) {\n          tempUsers.push({ id, ...users[id] });\n        }\n        setLoggedUsers(tempUsers);\n      })\n      .then(console.log(\"tempUsers\", tempUsers));\n  };\n\n  return (\n    <div className={styles.pollScene}>\n      <div className={styles.brandName}>SprintPlan</div>\n      <Popup\n        // open={!loggedUsers.length}\n        modals\n        defaultOpen={!window.localStorage.getItem(\"loggedUser\")}\n        closeOnDocumentClick={false}\n        className=\"my-popup-content\"\n        contentStyle={{\n          width: \"400px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        {(close) => <NameInput close={close} />}\n      </Popup>\n      <div className={styles.pollResults}>\n        <PollResults loggedUsers={loggedUsers} loggedUser={loggedUser} />\n      </div>\n      <div className={styles.usersWrapper}>\n        {loggedUsers && loggedUsers.length ? (\n          <UsersList users={loggedUsers} />\n        ) : (\n          <h3>Waiting for others to join</h3>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default PollScene;\n"]},"metadata":{},"sourceType":"module"}