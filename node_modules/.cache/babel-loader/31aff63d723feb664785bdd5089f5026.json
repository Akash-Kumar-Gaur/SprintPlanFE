{"ast":null,"code":"import _slicedToArray from\"/Users/akashkumargaur/sprintPlan/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import styles from\"./index.module.scss\";import TextField from\"@material-ui/core/TextField\";import MenuItem from\"@material-ui/core/MenuItem\";import Select from\"@material-ui/core/Select\";import FormControl from\"@material-ui/core/FormControl\";import InputLabel from\"@material-ui/core/InputLabel\";import Button from\"@material-ui/core/Button\";import{useHistory}from\"react-router\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CreatePollForm(_ref){var close=_ref.close;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),roomName=_useState2[0],setRoomName=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),series=_useState4[0],setSeries=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),allCanSee=_useState6[0],setAllCanSee=_useState6[1];var handleSeriesSelect=function handleSeriesSelect(event){setSeries(event.target.value);};var handleAccesSelect=function handleAccesSelect(event){setAllCanSee(event.target.value);};var SERIES=[[\"0\",\"1\",\"2\",\"3\",\"5\",\"8\",\"13\",\"21\"],[\"0\",\"1/2\",\"1\",\"2\",\"3\",\"5\",\"8\",\"13\"]];var history=useHistory();var createPoll=function createPoll(){// axios.get(\"/poll/2cedb783-9ec5-4070-90be-e82005987c62\").then((res) => {\n//   const response = res.data;\n//   console.log(\"response\", response);\n// });\n// history.push(\"/poll/2cedb783-9ec5-4070-90be-e82005987c62\");\n//PROD\nvar createSeries=series.split(\",\");axios({method:\"post\",url:\"/polls\",data:{roomName:roomName,series:createSeries,allCanSee:allCanSee}}).then(function(res){var response=res.data;history.push(\"/poll/\".concat(response.roomId));});//\nclose();};return/*#__PURE__*/_jsxs(\"div\",{className:styles.pollform,children:[\"Start New Game\",/*#__PURE__*/_jsxs(\"div\",{className:styles.form,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.formField,children:/*#__PURE__*/_jsx(TextField,{id:\"outlined-basic\",label:\"Enter Game's Name\",variant:\"outlined\",onChange:function onChange(e){return setRoomName(e.target.value);},fullWidth:true,required:true})}),/*#__PURE__*/_jsx(\"div\",{className:styles.formField,children:/*#__PURE__*/_jsxs(FormControl,{variant:\"outlined\",fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"demo-customized-select-label\",children:\"Series\"}),/*#__PURE__*/_jsxs(Select,{labelId:\"demo-simple-select-outlined-label\",id:\"demo-simple-select-outlined\",label:\"Series\",onChange:handleSeriesSelect,fullWidth:true,required:true,children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\".concat(SERIES[0]),children:SERIES[0].map(function(entry){return\"\".concat(entry,\", \");})}),/*#__PURE__*/_jsx(MenuItem,{value:\"\".concat(SERIES[1]),children:SERIES[1].map(function(entry){return\"\".concat(entry,\", \");})})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:styles.formField,children:[/*#__PURE__*/_jsxs(FormControl,{variant:\"outlined\",fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"demo-customized-select-label\",children:\"Who can show cards?\"}),/*#__PURE__*/_jsxs(Select,{labelId:\"demo-simple-select-outlined-label\",id:\"demo-simple-select-outlined\",label:\"Who can view results?\",fullWidth:true,onChange:handleAccesSelect,required:true,children:[/*#__PURE__*/_jsx(MenuItem,{value:false,children:\"Only Me\"}),/*#__PURE__*/_jsx(MenuItem,{value:true,children:\"Everyone\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.playBtn,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:function onClick(){return createPoll();},disabled:!roomName.length||!series,children:\"Start Game\"})})]})]})]});}export default CreatePollForm;","map":{"version":3,"sources":["/Users/akashkumargaur/sprintPlan/backend/frontend/src/Components/CreatePoll/index.jsx"],"names":["React","useState","styles","TextField","MenuItem","Select","FormControl","InputLabel","Button","useHistory","axios","CreatePollForm","close","roomName","setRoomName","series","setSeries","allCanSee","setAllCanSee","handleSeriesSelect","event","target","value","handleAccesSelect","SERIES","history","createPoll","createSeries","split","method","url","data","then","res","response","push","roomId","pollform","form","formField","e","map","entry","playBtn","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./index.module.scss\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router\";\nimport axios from \"axios\";\n\nfunction CreatePollForm({ close }) {\n  const [roomName, setRoomName] = useState(\"\");\n  const [series, setSeries] = useState([]);\n  const [allCanSee, setAllCanSee] = useState(false);\n\n  const handleSeriesSelect = (event) => {\n    setSeries(event.target.value);\n  };\n\n  const handleAccesSelect = (event) => {\n    setAllCanSee(event.target.value);\n  };\n\n  const SERIES = [\n    [\"0\", \"1\", \"2\", \"3\", \"5\", \"8\", \"13\", \"21\"],\n    [\"0\", \"1/2\", \"1\", \"2\", \"3\", \"5\", \"8\", \"13\"],\n  ];\n\n  let history = useHistory();\n\n  const createPoll = () => {\n    // axios.get(\"/poll/2cedb783-9ec5-4070-90be-e82005987c62\").then((res) => {\n    //   const response = res.data;\n    //   console.log(\"response\", response);\n    // });\n    // history.push(\"/poll/2cedb783-9ec5-4070-90be-e82005987c62\");\n\n    //PROD\n    const createSeries = series.split(\",\");\n    axios({\n      method: \"post\",\n      url: \"/polls\",\n      data: { roomName, series: createSeries, allCanSee },\n    }).then((res) => {\n      const response = res.data;\n      history.push(`/poll/${response.roomId}`);\n    });\n    //\n    close();\n  };\n\n  return (\n    <div className={styles.pollform}>\n      Start New Game\n      <div className={styles.form}>\n        <div className={styles.formField}>\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Enter Game's Name\"\n            variant=\"outlined\"\n            onChange={(e) => setRoomName(e.target.value)}\n            fullWidth\n            required\n          />\n        </div>\n        <div className={styles.formField}>\n          <FormControl variant=\"outlined\" fullWidth>\n            <InputLabel id=\"demo-customized-select-label\">Series</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Series\"\n              onChange={handleSeriesSelect}\n              fullWidth\n              required\n            >\n              <MenuItem value={`${SERIES[0]}`}>\n                {SERIES[0].map((entry) => `${entry}, `)}\n              </MenuItem>\n              <MenuItem value={`${SERIES[1]}`}>\n                {SERIES[1].map((entry) => `${entry}, `)}\n              </MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div className={styles.formField}>\n          <FormControl variant=\"outlined\" fullWidth>\n            <InputLabel id=\"demo-customized-select-label\">\n              Who can show cards?\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Who can view results?\"\n              fullWidth\n              onChange={handleAccesSelect}\n              required\n            >\n              <MenuItem value={false}>Only Me</MenuItem>\n              <MenuItem value={true}>Everyone</MenuItem>\n            </Select>\n          </FormControl>\n\n          <div className={styles.playBtn}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => createPoll()}\n              disabled={!roomName.length || !series}\n            >\n              Start Game\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CreatePollForm;\n"]},"metadata":{},"sourceType":"module"}