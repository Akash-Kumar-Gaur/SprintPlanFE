{"ast":null,"code":"var _jsxFileName = \"/Users/akashkumargaur/sprintPlan/frontend/src/Scenes/PollScene/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Popup from \"reactjs-popup\";\nimport NameInput from \"./partials/NameInput\";\nimport firebase from \"firebase\";\nimport styles from \"./index.module.scss\";\nimport PollResults from \"./partials/PollResults\";\nimport UsersList from \"./partials/UsersList\";\nimport Button from \"@material-ui/core/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PollScene({\n  loggedUser\n}) {\n  _s();\n\n  let {\n    pollId\n  } = useParams();\n  const [loggedUsers, setLoggedUsers] = useState([]);\n  let history = useHistory();\n  useEffect(() => {\n    getLoggedUsers();\n  }, []);\n\n  const getLoggedUsers = () => {\n    const userRef = firebase.database().ref(pollId);\n    userRef.on(\"value\", snapshot => {\n      const users = snapshot.val();\n      const tempUsers = [];\n\n      for (let id in users) {\n        if (users[id].name === window.localStorage.getItem(\"loggedUser\")) {\n          window.localStorage.setItem(\"loggedId\", id);\n        }\n\n        tempUsers.push({\n          id,\n          ...users[id]\n        });\n      }\n\n      setLoggedUsers(tempUsers);\n      const loggedId = window.localStorage.getItem(\"loggedId\");\n\n      if (loggedId) {\n        const currentRef = firebase.database().ref(pollId).child(loggedId);\n        currentRef.onDisconnect().remove(window.localStorage.removeItem(\"loggedUser\"));\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.pollScene,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.brandName,\n      children: \"SprintPlan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.headerRow,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => {\n          if (window.confirm(\"Start new game?\")) {\n            history.replace(\"/\");\n            const loggedId = window.localStorage.getItem(\"loggedId\");\n\n            if (loggedId) {\n              const currentRef = firebase.database().ref(pollId).child(loggedId);\n              currentRef.remove(window.localStorage.removeItem(\"loggedUser\"));\n            }\n          }\n        },\n        style: {\n          marginTop: \"30px\"\n        },\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: () => {\n          window.open(\"\", \"_self\", \"\");\n          window.close();\n        },\n        style: {\n          marginTop: \"30px\"\n        },\n        children: \"Leave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      modals: true,\n      defaultOpen: !window.localStorage.getItem(\"loggedUser\"),\n      closeOnDocumentClick: false,\n      className: \"my-popup-content\",\n      contentStyle: {\n        width: \"400px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: close => /*#__PURE__*/_jsxDEV(NameInput, {\n        close: close\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.pollResults,\n      children: /*#__PURE__*/_jsxDEV(PollResults, {\n        loggedUsers: loggedUsers,\n        loggedUser: loggedUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.usersWrapper,\n      children: loggedUsers && loggedUsers.length ? /*#__PURE__*/_jsxDEV(UsersList, {\n        users: loggedUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Waiting for others to join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PollScene, \"C3ZuwCP2DfWpA0mwW4KNmSNmu9I=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = PollScene;\nexport default PollScene;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollScene\");","map":{"version":3,"sources":["/Users/akashkumargaur/sprintPlan/frontend/src/Scenes/PollScene/index.jsx"],"names":["React","useEffect","useState","useHistory","useParams","Popup","NameInput","firebase","styles","PollResults","UsersList","Button","PollScene","loggedUser","pollId","loggedUsers","setLoggedUsers","history","getLoggedUsers","userRef","database","ref","on","snapshot","users","val","tempUsers","id","name","window","localStorage","getItem","setItem","push","loggedId","currentRef","child","onDisconnect","remove","removeItem","pollScene","brandName","headerRow","confirm","replace","marginTop","open","close","width","display","flexDirection","alignItems","justifyContent","pollResults","usersWrapper","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Popup from \"reactjs-popup\";\nimport NameInput from \"./partials/NameInput\";\nimport firebase from \"firebase\";\nimport styles from \"./index.module.scss\";\nimport PollResults from \"./partials/PollResults\";\nimport UsersList from \"./partials/UsersList\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction PollScene({ loggedUser }) {\n  let { pollId } = useParams();\n  const [loggedUsers, setLoggedUsers] = useState([]);\n\n  let history = useHistory();\n\n  useEffect(() => {\n    getLoggedUsers();\n  }, []);\n\n  const getLoggedUsers = () => {\n    const userRef = firebase.database().ref(pollId);\n    userRef.on(\"value\", (snapshot) => {\n      const users = snapshot.val();\n      const tempUsers = [];\n      for (let id in users) {\n        if (users[id].name === window.localStorage.getItem(\"loggedUser\")) {\n          window.localStorage.setItem(\"loggedId\", id);\n        }\n        tempUsers.push({ id, ...users[id] });\n      }\n      setLoggedUsers(tempUsers);\n      const loggedId = window.localStorage.getItem(\"loggedId\");\n      if (loggedId) {\n        const currentRef = firebase.database().ref(pollId).child(loggedId);\n        currentRef\n          .onDisconnect()\n          .remove(window.localStorage.removeItem(\"loggedUser\"));\n      }\n    });\n  };\n\n  return (\n    <div className={styles.pollScene}>\n      <div className={styles.brandName}>SprintPlan</div>\n      <div className={styles.headerRow}>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            if (window.confirm(\"Start new game?\")) {\n              history.replace(\"/\");\n              const loggedId = window.localStorage.getItem(\"loggedId\");\n              if (loggedId) {\n                const currentRef = firebase\n                  .database()\n                  .ref(pollId)\n                  .child(loggedId);\n                currentRef.remove(window.localStorage.removeItem(\"loggedUser\"));\n              }\n            }\n          }}\n          style={{\n            marginTop: \"30px\",\n          }}\n        >\n          New Game\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => {\n            window.open(\"\", \"_self\", \"\");\n            window.close();\n          }}\n          style={{\n            marginTop: \"30px\",\n          }}\n        >\n          Leave\n        </Button>\n      </div>\n      <Popup\n        modals\n        defaultOpen={!window.localStorage.getItem(\"loggedUser\")}\n        closeOnDocumentClick={false}\n        className=\"my-popup-content\"\n        contentStyle={{\n          width: \"400px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        {(close) => <NameInput close={close} />}\n      </Popup>\n      <div className={styles.pollResults}>\n        <PollResults loggedUsers={loggedUsers} loggedUser={loggedUser} />\n      </div>\n      <div className={styles.usersWrapper}>\n        {loggedUsers && loggedUsers.length ? (\n          <UsersList users={loggedUsers} />\n        ) : (\n          <h3>Waiting for others to join</h3>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default PollScene;\n"]},"metadata":{},"sourceType":"module"}