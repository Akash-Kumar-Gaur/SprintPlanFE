{"ast":null,"code":"import _slicedToArray from\"/Users/akashkumargaur/sprintPlan/backend/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import TextField from\"@material-ui/core/TextField\";import Button from\"@material-ui/core/Button\";import{useHistory,useParams}from\"react-router\";import{enterUser}from\"../../../../utils/database.utils\";import firebase from\"firebase\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function NameInput(_ref){var close=_ref.close,isInvalidRoom=_ref.isInvalidRoom;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useParams=useParams(),pollId=_useParams.pollId;var history=useHistory();var pushUser=function pushUser(){var userRef=firebase.database().ref(pollId);userRef.get().then(function(snapshot){if(snapshot.exists()){console.log(snapshot.val());var users=snapshot.val();for(var id in users){if(users[id].name===name){alert(\"User with same name already in room!!\");setName(\"\");}else{window.localStorage.setItem(\"loggedUser\",name);enterUser(name,pollId);close();}}}else{console.log(\"No data available\");window.localStorage.setItem(\"loggedUser\",name);enterUser(name,pollId);close();}}).catch(function(error){console.error(error);});};var handleInput=function handleInput(e){setName(e.target.value);};return/*#__PURE__*/_jsx(\"form\",{noValidate:true,autoComplete:\"off\",onSubmit:pushUser,children:/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\",padding:\"20px\"},children:[/*#__PURE__*/_jsx(\"h3\",{children:isInvalidRoom?\"Invalid Room ID !!!\":\"Please enter your name\"}),!isInvalidRoom?/*#__PURE__*/_jsx(TextField,{id:\"outlined-basic\",variant:\"outlined\",onChange:function onChange(e){return handleInput(e);},fullWidth:true,required:true,value:name}):null,/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",disabled:!name.length&&!isInvalidRoom,onClick:function onClick(){if(isInvalidRoom){history.replace(\"/\");}else{if(name.length){pushUser();}}},style:{marginTop:\"30px\"},children:isInvalidRoom?\"Go back Home\":\"Start Game\"})]})});}export default NameInput;","map":{"version":3,"sources":["/Users/akashkumargaur/sprintPlan/backend/client/src/Scenes/PollScene/partials/NameInput/index.jsx"],"names":["React","useState","TextField","Button","useHistory","useParams","enterUser","firebase","NameInput","close","isInvalidRoom","name","setName","pollId","history","pushUser","userRef","database","ref","get","then","snapshot","exists","console","log","val","users","id","alert","window","localStorage","setItem","catch","error","handleInput","e","target","value","textAlign","padding","length","replace","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory, useParams } from \"react-router\";\nimport { enterUser } from \"../../../../utils/database.utils\";\nimport firebase from \"firebase\";\n\nfunction NameInput({ close, isInvalidRoom }) {\n  const [name, setName] = useState(\"\");\n  let { pollId } = useParams();\n  let history = useHistory();\n\n  const pushUser = () => {\n    const userRef = firebase.database().ref(pollId);\n    userRef\n      .get()\n      .then((snapshot) => {\n        if (snapshot.exists()) {\n          console.log(snapshot.val());\n          const users = snapshot.val();\n          for (let id in users) {\n            if (users[id].name === name) {\n              alert(\"User with same name already in room!!\");\n              setName(\"\");\n            } else {\n              window.localStorage.setItem(\"loggedUser\", name);\n              enterUser(name, pollId);\n              close();\n            }\n          }\n        } else {\n          console.log(\"No data available\");\n          window.localStorage.setItem(\"loggedUser\", name);\n          enterUser(name, pollId);\n          close();\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const handleInput = (e) => {\n    setName(e.target.value);\n  };\n\n  return (\n    <form noValidate autoComplete=\"off\" onSubmit={pushUser}>\n      <div\n        style={{\n          textAlign: \"center\",\n          padding: \"20px\",\n        }}\n      >\n        <h3>\n          {isInvalidRoom ? \"Invalid Room ID !!!\" : \"Please enter your name\"}\n        </h3>\n        {!isInvalidRoom ? (\n          <TextField\n            id=\"outlined-basic\"\n            variant=\"outlined\"\n            onChange={(e) => handleInput(e)}\n            fullWidth\n            required\n            value={name}\n          />\n        ) : null}\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={!name.length && !isInvalidRoom}\n          onClick={() => {\n            if (isInvalidRoom) {\n              history.replace(\"/\");\n            } else {\n              if (name.length) {\n                pushUser();\n              }\n            }\n          }}\n          style={{\n            marginTop: \"30px\",\n          }}\n        >\n          {isInvalidRoom ? \"Go back Home\" : \"Start Game\"}\n        </Button>\n      </div>\n    </form>\n  );\n}\n\nexport default NameInput;\n"]},"metadata":{},"sourceType":"module"}