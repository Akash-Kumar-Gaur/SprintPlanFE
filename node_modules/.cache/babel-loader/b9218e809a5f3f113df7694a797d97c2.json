{"ast":null,"code":"var _jsxFileName = \"/Users/akashkumargaur/sprintPlan/frontend/src/Scenes/PollScene/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Popup from \"reactjs-popup\";\nimport NameInput from \"./partials/NameInput\";\nimport styles from \"./index.module.scss\";\nimport PollResults from \"./partials/PollResults\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PollScene() {\n  _s();\n\n  let {\n    pollId\n  } = useParams();\n  useEffect(() => {\n    const getUsers = () => {\n      const userRef = firebase.database().ref(pollId);\n      userRef.on(\"value\", snapshot => {\n        const users = snapshot.val();\n        const loggedUsers = [];\n\n        for (let id in users) {\n          loggedUsers.push(users[id]);\n        }\n\n        console.log(\"loggedUsers\", loggedUsers);\n        setUsers(loggedUsers);\n      });\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.pollScene,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.brandName,\n      children: \"SprintPlan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      modal: true,\n      defaultOpen: !window.localStorage.getItem(\"loggedUser\"),\n      closeOnDocumentClick: false,\n      className: \"my-popup-content\",\n      contentStyle: {\n        width: \"400px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: close => /*#__PURE__*/_jsxDEV(NameInput, {\n        close: close\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.pollResults,\n      children: /*#__PURE__*/_jsxDEV(PollResults, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PollScene, \"hjJ6JXizgQFZckhkXH/5ApnweTw=\", false, function () {\n  return [useParams];\n});\n\n_c = PollScene;\nexport default PollScene;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollScene\");","map":{"version":3,"sources":["/Users/akashkumargaur/sprintPlan/frontend/src/Scenes/PollScene/index.jsx"],"names":["React","useEffect","useParams","Popup","NameInput","styles","PollResults","PollScene","pollId","getUsers","userRef","firebase","database","ref","on","snapshot","users","val","loggedUsers","id","push","console","log","setUsers","pollScene","brandName","window","localStorage","getItem","width","display","flexDirection","alignItems","justifyContent","close","pollResults"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,MAAI;AAAEC,IAAAA;AAAF,MAAaN,SAAS,EAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,QAAQ,GAAG,MAAM;AACrB,YAAMC,OAAO,GAAGC,QAAQ,CAACC,QAAT,GAAoBC,GAApB,CAAwBL,MAAxB,CAAhB;AACAE,MAAAA,OAAO,CAACI,EAAR,CAAW,OAAX,EAAqBC,QAAD,IAAc;AAChC,cAAMC,KAAK,GAAGD,QAAQ,CAACE,GAAT,EAAd;AACA,cAAMC,WAAW,GAAG,EAApB;;AACA,aAAK,IAAIC,EAAT,IAAeH,KAAf,EAAsB;AACpBE,UAAAA,WAAW,CAACE,IAAZ,CAAiBJ,KAAK,CAACG,EAAD,CAAtB;AACD;;AACDE,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BJ,WAA3B;AACAK,QAAAA,QAAQ,CAACL,WAAD,CAAR;AACD,OARD;AASD,KAXD;AAYD,GAbQ,CAAT;AAcA,sBACE;AAAK,IAAA,SAAS,EAAEb,MAAM,CAACmB,SAAvB;AAAA,4BAEE;AAAK,MAAA,SAAS,EAAEnB,MAAM,CAACoB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,WAAW,EAAE,CAACC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,CAFhB;AAGE,MAAA,oBAAoB,EAAE,KAHxB;AAIE,MAAA,SAAS,EAAC,kBAJZ;AAKE,MAAA,YAAY,EAAE;AACZC,QAAAA,KAAK,EAAE,OADK;AAEZC,QAAAA,OAAO,EAAE,MAFG;AAGZC,QAAAA,aAAa,EAAE,QAHH;AAIZC,QAAAA,UAAU,EAAE,QAJA;AAKZC,QAAAA,cAAc,EAAE;AALJ,OALhB;AAAA,gBAaIC,KAAD,iBAAW,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA;AAbd;AAAA;AAAA;AAAA;AAAA,YAHF,eAkBE;AAAK,MAAA,SAAS,EAAE7B,MAAM,CAAC8B,WAAvB;AAAA,6BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GAzCQ5B,S;UACUL,S;;;KADVK,S;AA2CT,eAAeA,SAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Popup from \"reactjs-popup\";\nimport NameInput from \"./partials/NameInput\";\nimport styles from \"./index.module.scss\";\nimport PollResults from \"./partials/PollResults\";\n\nfunction PollScene() {\n  let { pollId } = useParams();\n\n  useEffect(() => {\n    const getUsers = () => {\n      const userRef = firebase.database().ref(pollId);\n      userRef.on(\"value\", (snapshot) => {\n        const users = snapshot.val();\n        const loggedUsers = [];\n        for (let id in users) {\n          loggedUsers.push(users[id]);\n        }\n        console.log(\"loggedUsers\", loggedUsers);\n        setUsers(loggedUsers);\n      });\n    };\n  });\n  return (\n    <div className={styles.pollScene}>\n      {/* <h3>Requested topic ID: {pollId}</h3> */}\n      <div className={styles.brandName}>SprintPlan</div>\n      <Popup\n        modal\n        defaultOpen={!window.localStorage.getItem(\"loggedUser\")}\n        closeOnDocumentClick={false}\n        className=\"my-popup-content\"\n        contentStyle={{\n          width: \"400px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        {(close) => <NameInput close={close} />}\n      </Popup>\n      <div className={styles.pollResults}>\n        <PollResults />\n      </div>\n    </div>\n  );\n}\n\nexport default PollScene;\n"]},"metadata":{},"sourceType":"module"}