{"ast":null,"code":"var _jsxFileName = \"/Users/akashkumargaur/sprintPlan/frontend/src/Scenes/PollScene/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Popup from \"reactjs-popup\";\nimport NameInput from \"./partials/NameInput\";\nimport firebase from \"firebase\";\nimport styles from \"./index.module.scss\";\nimport PollResults from \"./partials/PollResults\";\nimport UsersList from \"./partials/UsersList\";\nimport { enterUser, getCurrentUser } from \"../../utils/database.utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PollScene() {\n  _s();\n\n  let {\n    pollId\n  } = useParams();\n  const [loggedUsers, setLoggedUsers] = useState([]);\n  useEffect(() => {\n    getLoggedUsers();\n  }, []);\n\n  const getLoggedUsers = () => {\n    const userRef = firebase.database().ref(pollId);\n    const currentUser = getCurrentUser();\n    userRef.on(\"value\", snapshot => {\n      const users = snapshot.val();\n      const tempUsers = [];\n\n      for (let id in users) {\n        tempUsers.push({\n          id,\n          ...users[id]\n        });\n      }\n\n      const firebaseLogged = tempUsers.filter(entry => entry.name === currentUser);\n      setLoggedUsers(tempUsers);\n\n      if (!firebaseLogged.length) {// enterUser(currentUser, pollId);\n      }\n\n      const userWithID = loggedUsers.filter(entry => entry.name === currentUser);\n      console.log(\"firebaseLogged\", firebaseLogged, userWithID, currentUser); //   const currentUserId = userWithID.length\n      //     ? userWithID[0].id\n      //     : firebaseLogged[0].id;\n      //   const userRef = firebase.database().ref(pollId).child(currentUserId);\n      //   userRef.onDisconnect().remove();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.pollScene,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.brandName,\n      children: \"SprintPlan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      modals: true,\n      defaultOpen: !window.localStorage.getItem(\"loggedUser\"),\n      closeOnDocumentClick: false,\n      className: \"my-popup-content\",\n      contentStyle: {\n        width: \"400px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: close => /*#__PURE__*/_jsxDEV(NameInput, {\n        close: close\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.pollResults,\n      children: /*#__PURE__*/_jsxDEV(PollResults, {\n        loggedUsers: loggedUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.usersWrapper,\n      children: loggedUsers && loggedUsers.length ? /*#__PURE__*/_jsxDEV(UsersList, {\n        users: loggedUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Waiting for others to join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PollScene, \"6N3kzwMVK5zSQ3CY6jl1LxjeYb8=\", false, function () {\n  return [useParams];\n});\n\n_c = PollScene;\nexport default PollScene;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollScene\");","map":{"version":3,"sources":["/Users/akashkumargaur/sprintPlan/frontend/src/Scenes/PollScene/index.jsx"],"names":["React","useEffect","useState","useParams","Popup","NameInput","firebase","styles","PollResults","UsersList","enterUser","getCurrentUser","PollScene","pollId","loggedUsers","setLoggedUsers","getLoggedUsers","userRef","database","ref","currentUser","on","snapshot","users","val","tempUsers","id","push","firebaseLogged","filter","entry","name","length","userWithID","console","log","pollScene","brandName","window","localStorage","getItem","width","display","flexDirection","alignItems","justifyContent","close","pollResults","usersWrapper"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Popup from \"reactjs-popup\";\nimport NameInput from \"./partials/NameInput\";\nimport firebase from \"firebase\";\nimport styles from \"./index.module.scss\";\nimport PollResults from \"./partials/PollResults\";\nimport UsersList from \"./partials/UsersList\";\nimport { enterUser, getCurrentUser } from \"../../utils/database.utils\";\n\nfunction PollScene() {\n  let { pollId } = useParams();\n  const [loggedUsers, setLoggedUsers] = useState([]);\n\n  useEffect(() => {\n    getLoggedUsers();\n  }, []);\n\n  const getLoggedUsers = () => {\n    const userRef = firebase.database().ref(pollId);\n    const currentUser = getCurrentUser();\n    userRef.on(\"value\", (snapshot) => {\n      const users = snapshot.val();\n      const tempUsers = [];\n      for (let id in users) {\n        tempUsers.push({ id, ...users[id] });\n      }\n      const firebaseLogged = tempUsers.filter(\n        (entry) => entry.name === currentUser\n      );\n      setLoggedUsers(tempUsers);\n      if (!firebaseLogged.length) {\n        // enterUser(currentUser, pollId);\n      }\n      const userWithID = loggedUsers.filter(\n        (entry) => entry.name === currentUser\n      );\n      console.log(\"firebaseLogged\", firebaseLogged, userWithID, currentUser);\n      //   const currentUserId = userWithID.length\n      //     ? userWithID[0].id\n      //     : firebaseLogged[0].id;\n      //   const userRef = firebase.database().ref(pollId).child(currentUserId);\n      //   userRef.onDisconnect().remove();\n    });\n  };\n\n  return (\n    <div className={styles.pollScene}>\n      {/* <h3>Requested topic ID: {pollId}</h3> */}\n      <div className={styles.brandName}>SprintPlan</div>\n      <Popup\n        modals\n        defaultOpen={!window.localStorage.getItem(\"loggedUser\")}\n        closeOnDocumentClick={false}\n        className=\"my-popup-content\"\n        contentStyle={{\n          width: \"400px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        {(close) => <NameInput close={close} />}\n      </Popup>\n      <div className={styles.pollResults}>\n        <PollResults loggedUsers={loggedUsers} />\n      </div>\n      <div className={styles.usersWrapper}>\n        {loggedUsers && loggedUsers.length ? (\n          <UsersList users={loggedUsers} />\n        ) : (\n          <h3>Waiting for others to join</h3>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default PollScene;\n"]},"metadata":{},"sourceType":"module"}