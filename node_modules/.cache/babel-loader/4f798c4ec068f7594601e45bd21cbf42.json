{"ast":null,"code":"import _objectSpread from\"/Users/akashkumargaur/sprintPlan/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/akashkumargaur/sprintPlan/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{useHistory,useParams}from\"react-router-dom\";import Popup from\"reactjs-popup\";import NameInput from\"./partials/NameInput\";import firebase from\"firebase\";import styles from\"./index.module.scss\";import PollResults from\"./partials/PollResults\";import UsersList from\"./partials/UsersList\";import Button from\"@material-ui/core/Button\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PollScene(){var _useParams=useParams(),pollId=_useParams.pollId;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),loggedUsers=_useState2[0],setLoggedUsers=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isInvalidRoom=_useState4[0],_setIsInvalidRoom=_useState4[1];var history=useHistory();useEffect(function(){getLoggedUsers();},[]);var getLoggedUsers=function getLoggedUsers(){var userRef=firebase.database().ref(pollId);userRef.on(\"value\",function(snapshot){var users=snapshot.val();var tempUsers=[];for(var id in users){if(users[id].name===window.localStorage.getItem(\"loggedUser\")){window.localStorage.setItem(\"loggedId\",id);}tempUsers.push(_objectSpread({id:id},users[id]));}setLoggedUsers(tempUsers);var loggedId=window.localStorage.getItem(\"loggedId\");if(loggedId){var currentRef=firebase.database().ref(pollId).child(loggedId);currentRef.onDisconnect().remove(window.localStorage.removeItem(\"loggedUser\"));}});};return/*#__PURE__*/_jsxs(\"div\",{className:styles.pollScene,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.brandName,children:\"SprintPlan\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.headerRow,children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",size:\"small\",onClick:function onClick(){if(window.confirm(\"Start new game?\")){history.replace(\"/\");var loggedId=window.localStorage.getItem(\"loggedId\");if(loggedId){var currentRef=firebase.database().ref(pollId).child(loggedId);currentRef.remove(window.localStorage.removeItem(\"loggedUser\"));}}},children:\"New Game\"}),/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"contained\",color:\"secondary\",onClick:function onClick(){window.opener=null;window.open(\"about:blank\",\"_self\");setTimeout(function(){window.close();},1000);},children:\"Leave\"})]}),/*#__PURE__*/_jsx(Popup,{modals:true,defaultOpen:!window.localStorage.getItem(\"loggedUser\"),closeOnDocumentClick:false,className:\"my-popup-content\",contentStyle:{width:\"400px\",display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\"},children:function children(close){return/*#__PURE__*/_jsx(NameInput,{close:close,isInvalidRoom:isInvalidRoom});}}),/*#__PURE__*/_jsx(\"div\",{className:styles.pollResults,children:/*#__PURE__*/_jsx(PollResults,{loggedUsers:loggedUsers,setIsInvalidRoom:function setIsInvalidRoom(){return _setIsInvalidRoom(true);}})}),/*#__PURE__*/_jsx(\"div\",{className:styles.usersWrapper,children:loggedUsers&&loggedUsers.length?/*#__PURE__*/_jsx(UsersList,{users:loggedUsers}):/*#__PURE__*/_jsx(\"h3\",{children:\"Waiting for others to join\"})})]});}export default PollScene;","map":{"version":3,"sources":["/Users/akashkumargaur/sprintPlan/backend/frontend/src/Scenes/PollScene/index.jsx"],"names":["React","useEffect","useState","useHistory","useParams","Popup","NameInput","firebase","styles","PollResults","UsersList","Button","PollScene","pollId","loggedUsers","setLoggedUsers","isInvalidRoom","setIsInvalidRoom","history","getLoggedUsers","userRef","database","ref","on","snapshot","users","val","tempUsers","id","name","window","localStorage","getItem","setItem","push","loggedId","currentRef","child","onDisconnect","remove","removeItem","pollScene","brandName","headerRow","confirm","replace","opener","open","setTimeout","close","width","display","flexDirection","alignItems","justifyContent","pollResults","usersWrapper","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Popup from \"reactjs-popup\";\nimport NameInput from \"./partials/NameInput\";\nimport firebase from \"firebase\";\nimport styles from \"./index.module.scss\";\nimport PollResults from \"./partials/PollResults\";\nimport UsersList from \"./partials/UsersList\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction PollScene() {\n  let { pollId } = useParams();\n  const [loggedUsers, setLoggedUsers] = useState([]);\n  const [isInvalidRoom, setIsInvalidRoom] = useState(false);\n\n  let history = useHistory();\n\n  useEffect(() => {\n    getLoggedUsers();\n  }, []);\n\n  const getLoggedUsers = () => {\n    const userRef = firebase.database().ref(pollId);\n    userRef.on(\"value\", (snapshot) => {\n      const users = snapshot.val();\n      const tempUsers = [];\n      for (let id in users) {\n        if (users[id].name === window.localStorage.getItem(\"loggedUser\")) {\n          window.localStorage.setItem(\"loggedId\", id);\n        }\n        tempUsers.push({ id, ...users[id] });\n      }\n      setLoggedUsers(tempUsers);\n      const loggedId = window.localStorage.getItem(\"loggedId\");\n      if (loggedId) {\n        const currentRef = firebase.database().ref(pollId).child(loggedId);\n        currentRef\n          .onDisconnect()\n          .remove(window.localStorage.removeItem(\"loggedUser\"));\n      }\n    });\n  };\n\n  return (\n    <div className={styles.pollScene}>\n      <div className={styles.brandName}>SprintPlan</div>\n      <div className={styles.headerRow}>\n        <Button\n          variant=\"contained\"\n          size=\"small\"\n          onClick={() => {\n            if (window.confirm(\"Start new game?\")) {\n              history.replace(\"/\");\n              const loggedId = window.localStorage.getItem(\"loggedId\");\n              if (loggedId) {\n                const currentRef = firebase\n                  .database()\n                  .ref(pollId)\n                  .child(loggedId);\n                currentRef.remove(window.localStorage.removeItem(\"loggedUser\"));\n              }\n            }\n          }}\n        >\n          New Game\n        </Button>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => {\n            window.opener = null;\n            window.open(\"about:blank\", \"_self\");\n            setTimeout(() => {\n              window.close();\n            }, 1000);\n          }}\n        >\n          Leave\n        </Button>\n      </div>\n      <Popup\n        modals\n        defaultOpen={!window.localStorage.getItem(\"loggedUser\")}\n        closeOnDocumentClick={false}\n        className=\"my-popup-content\"\n        contentStyle={{\n          width: \"400px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        {(close) => <NameInput close={close} isInvalidRoom={isInvalidRoom} />}\n      </Popup>\n      <div className={styles.pollResults}>\n        <PollResults\n          loggedUsers={loggedUsers}\n          setIsInvalidRoom={() => setIsInvalidRoom(true)}\n        />\n      </div>\n      <div className={styles.usersWrapper}>\n        {loggedUsers && loggedUsers.length ? (\n          <UsersList users={loggedUsers} />\n        ) : (\n          <h3>Waiting for others to join</h3>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default PollScene;\n"]},"metadata":{},"sourceType":"module"}