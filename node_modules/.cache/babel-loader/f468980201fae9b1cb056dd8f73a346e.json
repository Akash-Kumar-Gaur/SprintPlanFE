{"ast":null,"code":"var _jsxFileName = \"/Users/akashkumargaur/sprintPlan/frontend/src/Scenes/PollScene/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Popup from \"reactjs-popup\";\nimport NameInput from \"./partials/NameInput\";\nimport firebase from \"firebase\";\nimport styles from \"./index.module.scss\";\nimport PollResults from \"./partials/PollResults\";\nimport UsersList from \"./partials/UsersList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PollScene({\n  loggedUser\n}) {\n  _s();\n\n  let {\n    pollId\n  } = useParams();\n  const [loggedUsers, setLoggedUsers] = useState([]);\n  const [openModal, setOpenModal] = useState(!window.localStorage.getItem(\"loggedUser\"));\n  useEffect(() => {\n    addCurrentUser();\n    getLoggedUsers();\n  }, []);\n\n  const addCurrentUser = () => {};\n\n  const getLoggedUsers = () => {\n    const userRef = firebase.database().ref(pollId);\n    userRef.on(\"value\", snapshot => {\n      const users = snapshot.val();\n      const tempUsers = [];\n\n      for (let id in users) {\n        if (users[id].name === window.localStorage.getItem(\"loggedUser\")) {\n          window.localStorage.setItem(\"loggedId\", id);\n        }\n\n        tempUsers.push({\n          id,\n          ...users[id]\n        });\n      }\n\n      setLoggedUsers(tempUsers);\n    });\n    const loggedId = window.localStorage.getItem(\"loggedId\");\n\n    if (loggedId) {\n      const currentRef = firebase.database().ref(pollId).child(loggedId);\n      currentRef.onDisconnect().remove();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.pollScene,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.brandName,\n      children: \"SprintPlan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      open: openModal,\n      modals: true,\n      defaultOpen: !window.localStorage.getItem(\"loggedUser\"),\n      closeOnDocumentClick: false,\n      className: \"my-popup-content\",\n      contentStyle: {\n        width: \"400px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: close => /*#__PURE__*/_jsxDEV(NameInput, {\n        close: close,\n        openModal: () => setOpenModal(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.pollResults,\n      children: /*#__PURE__*/_jsxDEV(PollResults, {\n        loggedUsers: loggedUsers,\n        loggedUser: loggedUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.usersWrapper,\n      children: loggedUsers && loggedUsers.length ? /*#__PURE__*/_jsxDEV(UsersList, {\n        users: loggedUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Waiting for others to join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PollScene, \"OJM9poLHsZVsLRCwZ7ctk72h6v8=\", false, function () {\n  return [useParams];\n});\n\n_c = PollScene;\nexport default PollScene;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollScene\");","map":{"version":3,"sources":["/Users/akashkumargaur/sprintPlan/frontend/src/Scenes/PollScene/index.jsx"],"names":["React","useEffect","useState","useParams","Popup","NameInput","firebase","styles","PollResults","UsersList","PollScene","loggedUser","pollId","loggedUsers","setLoggedUsers","openModal","setOpenModal","window","localStorage","getItem","addCurrentUser","getLoggedUsers","userRef","database","ref","on","snapshot","users","val","tempUsers","id","name","setItem","push","loggedId","currentRef","child","onDisconnect","remove","pollScene","brandName","width","display","flexDirection","alignItems","justifyContent","close","pollResults","usersWrapper","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAAmC;AAAA;;AACjC,MAAI;AAAEC,IAAAA;AAAF,MAAaT,SAAS,EAA1B;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CACxC,CAACe,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,CADuC,CAA1C;AAIAlB,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,cAAc;AACdC,IAAAA,cAAc;AACf,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMD,cAAc,GAAG,MAAM,CAAE,CAA/B;;AAEA,QAAMC,cAAc,GAAG,MAAM;AAC3B,UAAMC,OAAO,GAAGhB,QAAQ,CAACiB,QAAT,GAAoBC,GAApB,CAAwBZ,MAAxB,CAAhB;AACAU,IAAAA,OAAO,CAACG,EAAR,CAAW,OAAX,EAAqBC,QAAD,IAAc;AAChC,YAAMC,KAAK,GAAGD,QAAQ,CAACE,GAAT,EAAd;AACA,YAAMC,SAAS,GAAG,EAAlB;;AACA,WAAK,IAAIC,EAAT,IAAeH,KAAf,EAAsB;AACpB,YAAIA,KAAK,CAACG,EAAD,CAAL,CAAUC,IAAV,KAAmBd,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,CAAvB,EAAkE;AAChEF,UAAAA,MAAM,CAACC,YAAP,CAAoBc,OAApB,CAA4B,UAA5B,EAAwCF,EAAxC;AACD;;AACDD,QAAAA,SAAS,CAACI,IAAV,CAAe;AAAEH,UAAAA,EAAF;AAAM,aAAGH,KAAK,CAACG,EAAD;AAAd,SAAf;AACD;;AACDhB,MAAAA,cAAc,CAACe,SAAD,CAAd;AACD,KAVD;AAWA,UAAMK,QAAQ,GAAGjB,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CAAjB;;AACA,QAAIe,QAAJ,EAAc;AACZ,YAAMC,UAAU,GAAG7B,QAAQ,CAACiB,QAAT,GAAoBC,GAApB,CAAwBZ,MAAxB,EAAgCwB,KAAhC,CAAsCF,QAAtC,CAAnB;AACAC,MAAAA,UAAU,CAACE,YAAX,GAA0BC,MAA1B;AACD;AACF,GAlBD;;AAoBA,sBACE;AAAK,IAAA,SAAS,EAAE/B,MAAM,CAACgC,SAAvB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEhC,MAAM,CAACiC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AACE,MAAA,IAAI,EAAEzB,SADR;AAEE,MAAA,MAAM,MAFR;AAGE,MAAA,WAAW,EAAE,CAACE,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,CAHhB;AAIE,MAAA,oBAAoB,EAAE,KAJxB;AAKE,MAAA,SAAS,EAAC,kBALZ;AAME,MAAA,YAAY,EAAE;AACZsB,QAAAA,KAAK,EAAE,OADK;AAEZC,QAAAA,OAAO,EAAE,MAFG;AAGZC,QAAAA,aAAa,EAAE,QAHH;AAIZC,QAAAA,UAAU,EAAE,QAJA;AAKZC,QAAAA,cAAc,EAAE;AALJ,OANhB;AAAA,gBAcIC,KAAD,iBACC,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEA,KAAlB;AAAyB,QAAA,SAAS,EAAE,MAAM9B,YAAY,CAAC,IAAD;AAAtD;AAAA;AAAA;AAAA;AAAA;AAfJ;AAAA;AAAA;AAAA;AAAA,YAFF,eAoBE;AAAK,MAAA,SAAS,EAAET,MAAM,CAACwC,WAAvB;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,WAAW,EAAElC,WAA1B;AAAuC,QAAA,UAAU,EAAEF;AAAnD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YApBF,eAuBE;AAAK,MAAA,SAAS,EAAEJ,MAAM,CAACyC,YAAvB;AAAA,gBACGnC,WAAW,IAAIA,WAAW,CAACoC,MAA3B,gBACC,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEpC;AAAlB;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;GAnEQH,S;UACUP,S;;;KADVO,S;AAqET,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Popup from \"reactjs-popup\";\nimport NameInput from \"./partials/NameInput\";\nimport firebase from \"firebase\";\nimport styles from \"./index.module.scss\";\nimport PollResults from \"./partials/PollResults\";\nimport UsersList from \"./partials/UsersList\";\n\nfunction PollScene({ loggedUser }) {\n  let { pollId } = useParams();\n  const [loggedUsers, setLoggedUsers] = useState([]);\n  const [openModal, setOpenModal] = useState(\n    !window.localStorage.getItem(\"loggedUser\")\n  );\n\n  useEffect(() => {\n    addCurrentUser();\n    getLoggedUsers();\n  }, []);\n\n  const addCurrentUser = () => {};\n\n  const getLoggedUsers = () => {\n    const userRef = firebase.database().ref(pollId);\n    userRef.on(\"value\", (snapshot) => {\n      const users = snapshot.val();\n      const tempUsers = [];\n      for (let id in users) {\n        if (users[id].name === window.localStorage.getItem(\"loggedUser\")) {\n          window.localStorage.setItem(\"loggedId\", id);\n        }\n        tempUsers.push({ id, ...users[id] });\n      }\n      setLoggedUsers(tempUsers);\n    });\n    const loggedId = window.localStorage.getItem(\"loggedId\");\n    if (loggedId) {\n      const currentRef = firebase.database().ref(pollId).child(loggedId);\n      currentRef.onDisconnect().remove();\n    }\n  };\n\n  return (\n    <div className={styles.pollScene}>\n      <div className={styles.brandName}>SprintPlan</div>\n      <Popup\n        open={openModal}\n        modals\n        defaultOpen={!window.localStorage.getItem(\"loggedUser\")}\n        closeOnDocumentClick={false}\n        className=\"my-popup-content\"\n        contentStyle={{\n          width: \"400px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        {(close) => (\n          <NameInput close={close} openModal={() => setOpenModal(true)} />\n        )}\n      </Popup>\n      <div className={styles.pollResults}>\n        <PollResults loggedUsers={loggedUsers} loggedUser={loggedUser} />\n      </div>\n      <div className={styles.usersWrapper}>\n        {loggedUsers && loggedUsers.length ? (\n          <UsersList users={loggedUsers} />\n        ) : (\n          <h3>Waiting for others to join</h3>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default PollScene;\n"]},"metadata":{},"sourceType":"module"}