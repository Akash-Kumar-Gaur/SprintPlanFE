{"ast":null,"code":"var _jsxFileName = \"/Users/akashkumargaur/sprintPlan/frontend/src/Scenes/PollScene/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Popup from \"reactjs-popup\";\nimport NameInput from \"./partials/NameInput\";\nimport styles from \"./index.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PollScene() {\n  _s();\n\n  let {\n    pollId\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.pollScene,\n    children: [/*#__PURE__*/_jsxDEV(Popup // trigger={<button className=\"button\"> Open Modal </button>}\n    , {\n      modal: true,\n      defaultOpen: !window.localStorage.getItem(\"loggedUser\"),\n      closeOnDocumentClick: false,\n      className: \"my-popup-content\",\n      contentStyle: {\n        width: \"400px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: close => /*#__PURE__*/_jsxDEV(NameInput, {\n        close: close\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.pollResults,\n      style: {\n        width: \"400px\"\n      },\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PollScene, \"eZGlbMv2X1F7tnED7RoscDUH0+s=\", false, function () {\n  return [useParams];\n});\n\n_c = PollScene;\nexport default PollScene;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollScene\");","map":{"version":3,"sources":["/Users/akashkumargaur/sprintPlan/frontend/src/Scenes/PollScene/index.jsx"],"names":["React","useParams","Popup","NameInput","styles","PollScene","pollId","pollScene","window","localStorage","getItem","width","display","flexDirection","alignItems","justifyContent","close","pollResults"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,MAAI;AAAEC,IAAAA;AAAF,MAAaL,SAAS,EAA1B;AACA,sBACE;AAAK,IAAA,SAAS,EAAEG,MAAM,CAACG,SAAvB;AAAA,4BAEE,QAAC,KAAD,CACE;AADF;AAEE,MAAA,KAAK,MAFP;AAGE,MAAA,WAAW,EAAE,CAACC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,CAHhB;AAIE,MAAA,oBAAoB,EAAE,KAJxB;AAKE,MAAA,SAAS,EAAC,kBALZ;AAME,MAAA,YAAY,EAAE;AACZC,QAAAA,KAAK,EAAE,OADK;AAEZC,QAAAA,OAAO,EAAE,MAFG;AAGZC,QAAAA,aAAa,EAAE,QAHH;AAIZC,QAAAA,UAAU,EAAE,QAJA;AAKZC,QAAAA,cAAc,EAAE;AALJ,OANhB;AAAA,gBAcIC,KAAD,iBAAW,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA;AAdd;AAAA;AAAA;AAAA;AAAA,YAFF,eAkBE;AACE,MAAA,SAAS,EAAEZ,MAAM,CAACa,WADpB;AAEE,MAAA,KAAK,EAAE;AACLN,QAAAA,KAAK,EAAE;AADF,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GA/BQN,S;UACUJ,S;;;KADVI,S;AAiCT,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Popup from \"reactjs-popup\";\nimport NameInput from \"./partials/NameInput\";\nimport styles from \"./index.module.scss\";\n\nfunction PollScene() {\n  let { pollId } = useParams();\n  return (\n    <div className={styles.pollScene}>\n      {/* <h3>Requested topic ID: {pollId}</h3> */}\n      <Popup\n        // trigger={<button className=\"button\"> Open Modal </button>}\n        modal\n        defaultOpen={!window.localStorage.getItem(\"loggedUser\")}\n        closeOnDocumentClick={false}\n        className=\"my-popup-content\"\n        contentStyle={{\n          width: \"400px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        {(close) => <NameInput close={close} />}\n      </Popup>\n      <div\n        className={styles.pollResults}\n        style={{\n          width: \"400px\",\n        }}\n      >\n        test\n      </div>\n    </div>\n  );\n}\n\nexport default PollScene;\n"]},"metadata":{},"sourceType":"module"}