{"ast":null,"code":"var _jsxFileName = \"/Users/akashkumargaur/sprintPlan/frontend/src/Components/CreatePoll/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styles from \"./index.module.scss\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreatePollForm({\n  close\n}) {\n  _s();\n\n  const [roomName, setRoomName] = useState(\"\");\n  const [series, setSeries] = useState([]);\n  const [allCanSee, setAllCanSee] = useState(false);\n\n  const handleSeriesSelect = event => {\n    setSeries(event.target.value);\n  };\n\n  const handleAccesSelect = event => {\n    setAllCanSee(event.target.value);\n  };\n\n  const SERIES = [[\"0\", \"1\", \"2\", \"3\", \"5\", \"8\", \"13\", \"21\"], [\"0\", \"1/2\", \"1\", \"2\", \"3\", \"5\", \"8\", \"13\"]];\n  let history = useHistory();\n\n  const createPoll = () => {\n    axios.get(\"/poll/2cedb783-9ec5-4070-90be-e82005987c62\").then(res => {\n      const response = res.data;\n      console.log(\"response\", response);\n    });\n    history.push(\"/poll/2cedb783-9ec5-4070-90be-e82005987c62\"); //PROD\n    // const createSeries = series.split(\",\");\n    // axios({\n    //   method: \"post\",\n    //   url: \"/polls\",\n    //   data: { roomName, series: createSeries, allCanSee },\n    // }).then((res) => {\n    //   const response = res.data;\n    //   history.push(`/poll/${response.id}`);\n    // });\n    //\n\n    close();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.pollform,\n    children: [\"Start New Game\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formField,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Enter Game's Name\",\n          variant: \"outlined\",\n          onChange: e => setRoomName(e.target.value),\n          fullWidth: true,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formField,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-customized-select-label\",\n            children: \"Series\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-simple-select-outlined-label\",\n            id: \"demo-simple-select-outlined\",\n            label: \"Series\",\n            onChange: handleSeriesSelect,\n            fullWidth: true,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: `${SERIES[0]}`,\n              children: SERIES[0].map(entry => `${entry}, `)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: `${SERIES[1]}`,\n              children: SERIES[1].map(entry => `${entry}, `)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formField,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-customized-select-label\",\n            children: \"Who can show cards?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-simple-select-outlined-label\",\n            id: \"demo-simple-select-outlined\",\n            label: \"Who can view results?\",\n            fullWidth: true,\n            onChange: handleAccesSelect,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: false,\n              children: \"Only Me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: true,\n              children: \"Everyone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.playBtn,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: () => createPoll(),\n            disabled: !roomName.length || !series,\n            children: \"Start Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreatePollForm, \"/FhR6xZydr2jcubjKa5dJqrEmdo=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreatePollForm;\nexport default CreatePollForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePollForm\");","map":{"version":3,"sources":["/Users/akashkumargaur/sprintPlan/frontend/src/Components/CreatePoll/index.jsx"],"names":["React","useState","styles","TextField","MenuItem","Select","FormControl","InputLabel","Button","useHistory","axios","CreatePollForm","close","roomName","setRoomName","series","setSeries","allCanSee","setAllCanSee","handleSeriesSelect","event","target","value","handleAccesSelect","SERIES","history","createPoll","get","then","res","response","data","console","log","push","pollform","form","formField","e","map","entry","playBtn","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./index.module.scss\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router\";\nimport axios from \"axios\";\n\nfunction CreatePollForm({ close }) {\n  const [roomName, setRoomName] = useState(\"\");\n  const [series, setSeries] = useState([]);\n  const [allCanSee, setAllCanSee] = useState(false);\n\n  const handleSeriesSelect = (event) => {\n    setSeries(event.target.value);\n  };\n\n  const handleAccesSelect = (event) => {\n    setAllCanSee(event.target.value);\n  };\n\n  const SERIES = [\n    [\"0\", \"1\", \"2\", \"3\", \"5\", \"8\", \"13\", \"21\"],\n    [\"0\", \"1/2\", \"1\", \"2\", \"3\", \"5\", \"8\", \"13\"],\n  ];\n\n  let history = useHistory();\n\n  const createPoll = () => {\n    axios.get(\"/poll/2cedb783-9ec5-4070-90be-e82005987c62\").then((res) => {\n      const response = res.data;\n      console.log(\"response\", response);\n    });\n    history.push(\"/poll/2cedb783-9ec5-4070-90be-e82005987c62\");\n\n    //PROD\n    // const createSeries = series.split(\",\");\n    // axios({\n    //   method: \"post\",\n    //   url: \"/polls\",\n    //   data: { roomName, series: createSeries, allCanSee },\n    // }).then((res) => {\n    //   const response = res.data;\n    //   history.push(`/poll/${response.id}`);\n    // });\n    //\n    close();\n  };\n\n  return (\n    <div className={styles.pollform}>\n      Start New Game\n      <div className={styles.form}>\n        <div className={styles.formField}>\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Enter Game's Name\"\n            variant=\"outlined\"\n            onChange={(e) => setRoomName(e.target.value)}\n            fullWidth\n            required\n          />\n        </div>\n        <div className={styles.formField}>\n          <FormControl variant=\"outlined\" fullWidth>\n            <InputLabel id=\"demo-customized-select-label\">Series</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Series\"\n              onChange={handleSeriesSelect}\n              fullWidth\n              required\n            >\n              <MenuItem value={`${SERIES[0]}`}>\n                {SERIES[0].map((entry) => `${entry}, `)}\n              </MenuItem>\n              <MenuItem value={`${SERIES[1]}`}>\n                {SERIES[1].map((entry) => `${entry}, `)}\n              </MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div className={styles.formField}>\n          <FormControl variant=\"outlined\" fullWidth>\n            <InputLabel id=\"demo-customized-select-label\">\n              Who can show cards?\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Who can view results?\"\n              fullWidth\n              onChange={handleAccesSelect}\n              required\n            >\n              <MenuItem value={false}>Only Me</MenuItem>\n              <MenuItem value={true}>Everyone</MenuItem>\n            </Select>\n          </FormControl>\n\n          <div className={styles.playBtn}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => createPoll()}\n              disabled={!roomName.length || !series}\n            >\n              Start Game\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CreatePollForm;\n"]},"metadata":{},"sourceType":"module"}