{"ast":null,"code":"var _jsxFileName = \"/Users/akashkumargaur/sprintPlan/frontend/src/Scenes/PollScene/partials/PollResults/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport styles from \"../../index.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PollResults() {\n  _s();\n\n  const [pollData, setPollData] = useState({});\n  let {\n    pollId\n  } = useParams();\n  useEffect(() => {\n    const data = {\n      _id: \"ad41e2bd-5615-4d06-b797-0ab11ee4dbdc\",\n      roomName: \"TestGame\",\n      allCanSee: false,\n      series: [{\n        entryValue: \"0\",\n        count: 0\n      }, {\n        entryValue: \"1\",\n        count: 0\n      }, {\n        entryValue: \"2\",\n        count: 0\n      }, {\n        entryValue: \"3\",\n        count: 0\n      }, {\n        entryValue: \"5\",\n        count: 0\n      }, {\n        entryValue: \"8\",\n        count: 0\n      }, {\n        entryValue: \"13\",\n        count: 0\n      }, {\n        entryValue: \"21\",\n        count: 0\n      }],\n      isSpectator: null\n    };\n    setPollData(data);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.resultsWrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: pollData.roomName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PollResults, \"N6T6K5lfc47C5JDCBa3qCHdAgNY=\", false, function () {\n  return [useParams];\n});\n\n_c = PollResults;\nexport default PollResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollResults\");","map":{"version":3,"sources":["/Users/akashkumargaur/sprintPlan/frontend/src/Scenes/PollScene/partials/PollResults/index.jsx"],"names":["React","useEffect","useState","useParams","styles","PollResults","pollData","setPollData","pollId","data","_id","roomName","allCanSee","series","entryValue","count","isSpectator","resultsWrapper"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,MAAI;AAAEM,IAAAA;AAAF,MAAaL,SAAS,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,IAAI,GAAG;AACXC,MAAAA,GAAG,EAAE,sCADM;AAEXC,MAAAA,QAAQ,EAAE,UAFC;AAGXC,MAAAA,SAAS,EAAE,KAHA;AAIXC,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,UAAU,EAAE,GAAd;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OADM,EAEN;AAAED,QAAAA,UAAU,EAAE,GAAd;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OAFM,EAGN;AAAED,QAAAA,UAAU,EAAE,GAAd;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OAHM,EAIN;AAAED,QAAAA,UAAU,EAAE,GAAd;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OAJM,EAKN;AAAED,QAAAA,UAAU,EAAE,GAAd;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OALM,EAMN;AAAED,QAAAA,UAAU,EAAE,GAAd;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OANM,EAON;AAAED,QAAAA,UAAU,EAAE,IAAd;AAAoBC,QAAAA,KAAK,EAAE;AAA3B,OAPM,EAQN;AAAED,QAAAA,UAAU,EAAE,IAAd;AAAoBC,QAAAA,KAAK,EAAE;AAA3B,OARM,CAJG;AAcXC,MAAAA,WAAW,EAAE;AAdF,KAAb;AAgBAT,IAAAA,WAAW,CAACE,IAAD,CAAX;AACD,GAlBQ,CAAT;AAoBA,sBACE;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACa,cAAvB;AAAA,2BACE;AAAA,gBAAMX,QAAQ,CAACK;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA7BQN,W;UAEUF,S;;;KAFVE,W;AA+BT,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport styles from \"../../index.module.scss\";\n\nfunction PollResults() {\n  const [pollData, setPollData] = useState({});\n  let { pollId } = useParams();\n\n  useEffect(() => {\n    const data = {\n      _id: \"ad41e2bd-5615-4d06-b797-0ab11ee4dbdc\",\n      roomName: \"TestGame\",\n      allCanSee: false,\n      series: [\n        { entryValue: \"0\", count: 0 },\n        { entryValue: \"1\", count: 0 },\n        { entryValue: \"2\", count: 0 },\n        { entryValue: \"3\", count: 0 },\n        { entryValue: \"5\", count: 0 },\n        { entryValue: \"8\", count: 0 },\n        { entryValue: \"13\", count: 0 },\n        { entryValue: \"21\", count: 0 },\n      ],\n      isSpectator: null,\n    };\n    setPollData(data);\n  });\n\n  return (\n    <div className={styles.resultsWrapper}>\n      <div>{pollData.roomName}</div>\n    </div>\n  );\n}\n\nexport default PollResults;\n"]},"metadata":{},"sourceType":"module"}